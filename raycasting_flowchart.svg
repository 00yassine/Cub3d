<?xml version="1.0" encoding="UTF-8"?>
<svg width="1800" height="1600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: 'Segoe UI', Arial, sans-serif; font-size: 28px; font-weight: bold; fill: #2c3e50; }
      .subtitle { font-family: 'Segoe UI', Arial, sans-serif; font-size: 18px; font-weight: bold; fill: #34495e; }
      .section-title { font-family: 'Segoe UI', Arial, sans-serif; font-size: 16px; font-weight: bold; fill: #2c3e50; }

      .box { fill: #3498db; stroke: #2980b9; stroke-width: 2; rx: 10; filter: url(#shadow); }
      .box-init { fill: #e74c3c; stroke: #c0392b; stroke-width: 2; rx: 10; filter: url(#shadow); }
      .box-input { fill: #f39c12; stroke: #e67e22; stroke-width: 2; rx: 10; filter: url(#shadow); }
      .box-ray { fill: #9b59b6; stroke: #8e44ad; stroke-width: 2; rx: 10; filter: url(#shadow); }
      .box-draw { fill: #27ae60; stroke: #229954; stroke-width: 2; rx: 10; filter: url(#shadow); }
      .box-challenge { fill: #ff6b6b; stroke: #e74c3c; stroke-width: 2; rx: 10; filter: url(#shadow); }
      .box-info { fill: #ecf0f1; stroke: #bdc3c7; stroke-width: 2; rx: 10; filter: url(#shadow); }

      .decision { fill: #f1c40f; stroke: #f39c12; stroke-width: 2; filter: url(#shadow); }

      .text { font-family: 'Segoe UI', Arial, sans-serif; font-size: 12px; fill: white; text-anchor: middle; dominant-baseline: middle; font-weight: 500; }
      .text-small { font-family: 'Segoe UI', Arial, sans-serif; font-size: 10px; fill: white; text-anchor: middle; dominant-baseline: middle; }
      .text-tiny { font-family: 'Segoe UI', Arial, sans-serif; font-size: 8px; fill: white; text-anchor: middle; dominant-baseline: middle; }
      .text-dark { font-family: 'Segoe UI', Arial, sans-serif; font-size: 11px; fill: #2c3e50; text-anchor: start; font-weight: 500; }
      .text-info { font-family: 'Segoe UI', Arial, sans-serif; font-size: 10px; fill: #34495e; text-anchor: start; }

      .arrow { stroke: #34495e; stroke-width: 3; fill: none; marker-end: url(#arrowhead); }
      .arrow-thick { stroke: #e74c3c; stroke-width: 4; fill: none; marker-end: url(#arrowhead-red); }

      .section-bg { fill: #f8f9fa; stroke: #dee2e6; stroke-width: 1; rx: 15; opacity: 0.3; }
    </style>

    <!-- Arrow markers -->
    <marker id="arrowhead" markerWidth="12" markerHeight="8" refX="12" refY="4" orient="auto">
      <polygon points="0 0, 12 4, 0 8" fill="#34495e"/>
    </marker>
    <marker id="arrowhead-red" markerWidth="12" markerHeight="8" refX="12" refY="4" orient="auto">
      <polygon points="0 0, 12 4, 0 8" fill="#e74c3c"/>
    </marker>

    <!-- Shadow filter -->
    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="2" dy="2" stdDeviation="3" flood-opacity="0.3"/>
    </filter>

    <!-- Background gradient -->
    <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#f8f9fa;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#e9ecef;stop-opacity:1" />
    </linearGradient>
  </defs>

  <!-- Background -->
  <rect width="100%" height="100%" fill="url(#bgGradient)"/>

  <!-- Main Title -->
  <text x="900" y="40" class="title" text-anchor="middle">Cub3D Advanced Raycasting Engine</text>
  <text x="900" y="70" class="subtitle" text-anchor="middle">Modular Architecture &amp; Performance Optimizations</text>

  <!-- Section 1: Main Program Flow -->
  <rect x="30" y="100" width="280" height="650" class="section-bg"/>
  <text x="170" y="125" class="section-title" text-anchor="middle">Main Program Flow</text>

  <!-- Start -->
  <rect x="120" y="150" width="100" height="40" class="box-init"/>
  <text x="170" y="170" class="text">Start Program</text>

  <!-- Parse Map -->
  <rect x="120" y="210" width="100" height="40" class="box-init"/>
  <text x="170" y="230" class="text">Parse Map File</text>

  <!-- Initialize MLX -->
  <rect x="120" y="270" width="100" height="40" class="box-init"/>
  <text x="170" y="290" class="text">Initialize MLX</text>

  <!-- Game Loop Start -->
  <rect x="120" y="330" width="100" height="40" class="box"/>
  <text x="170" y="350" class="text">Game Loop</text>

  <!-- Handle Input -->
  <rect x="120" y="390" width="100" height="40" class="box-input"/>
  <text x="170" y="410" class="text">Handle Input</text>

  <!-- Update Movement -->
  <rect x="120" y="450" width="100" height="40" class="box-input"/>
  <text x="170" y="470" class="text">Update Position</text>

  <!-- Clear Buffer -->
  <rect x="120" y="510" width="100" height="40" class="box"/>
  <text x="170" y="530" class="text">Clear Buffer</text>

  <!-- Cast Rays -->
  <rect x="120" y="570" width="100" height="40" class="box-ray"/>
  <text x="170" y="590" class="text">Cast 1200 Rays</text>

  <!-- Render Frame -->
  <rect x="120" y="630" width="100" height="40" class="box-draw"/>
  <text x="170" y="650" class="text">Render Frame</text>

  <!-- Display -->
  <rect x="120" y="690" width="100" height="40" class="box"/>
  <text x="170" y="710" class="text">Display to MLX</text>

  <!-- Main Flow Arrows -->
  <line x1="170" y1="190" x2="170" y2="210" class="arrow"/>
  <line x1="170" y1="250" x2="170" y2="270" class="arrow"/>
  <line x1="170" y1="310" x2="170" y2="330" class="arrow"/>
  <line x1="170" y1="370" x2="170" y2="390" class="arrow"/>
  <line x1="170" y1="430" x2="170" y2="450" class="arrow"/>
  <line x1="170" y1="490" x2="170" y2="510" class="arrow"/>
  <line x1="170" y1="550" x2="170" y2="570" class="arrow"/>
  <line x1="170" y1="610" x2="170" y2="630" class="arrow"/>
  <line x1="170" y1="670" x2="170" y2="690" class="arrow"/>

  <!-- Loop back arrow -->
  <path d="M 220 700 Q 280 720 280 350 Q 280 330 220 350" class="arrow-thick"/>
  <text x="285" y="525" class="text-dark" style="font-size: 10px; writing-mode: tb;">Loop Back</text>

  <!-- Section 2: Enhanced Raycasting Algorithm -->
  <rect x="340" y="100" width="320" height="650" class="section-bg"/>
  <text x="500" y="125" class="section-title" text-anchor="middle">Enhanced DDA Raycasting</text>

  <!-- Start Raycasting -->
  <rect x="430" y="150" width="140" height="35" class="box-ray"/>
  <text x="500" y="168" class="text">get_distance(ray_angle)</text>

  <!-- Horizontal DDA -->
  <rect x="360" y="210" width="120" height="35" class="box-ray"/>
  <text x="420" y="228" class="text-small">Horizontal DDA</text>

  <!-- Vertical DDA -->
  <rect x="500" y="210" width="120" height="35" class="box-ray"/>
  <text x="560" y="228" class="text-small">Vertical DDA</text>

  <!-- Horizontal Intercept -->
  <rect x="360" y="265" width="120" height="30" class="box-ray"/>
  <text x="420" y="280" class="text-small">get_horizontal_intercept</text>

  <!-- Vertical Intercept -->
  <rect x="500" y="265" width="120" height="30" class="box-ray"/>
  <text x="560" y="280" class="text-small">get_vertical_intercept</text>

  <!-- DDA Loop H -->
  <rect x="360" y="315" width="120" height="30" class="box-ray"/>
  <text x="420" y="330" class="text-small">DDA Step Loop</text>

  <!-- DDA Loop V -->
  <rect x="500" y="315" width="120" height="30" class="box-ray"/>
  <text x="560" y="330" class="text-small">DDA Step Loop</text>

  <!-- Wall Check H -->
  <polygon points="380,365 420,365 440,380 420,395 380,395 360,380" class="decision"/>
  <text x="400" y="380" class="text-tiny">is_wall?</text>

  <!-- Wall Check V -->
  <polygon points="520,365 560,365 580,380 560,395 520,395 500,380" class="decision"/>
  <text x="540" y="380" class="text-tiny">is_wall?</text>

  <!-- EPS Handling -->
  <rect x="360" y="415" width="120" height="30" class="box-ray"/>
  <text x="420" y="430" class="text-small">EPS Offset (1e-6)</text>

  <rect x="500" y="415" width="120" height="30" class="box-ray"/>
  <text x="560" y="430" class="text-small">EPS Offset (1e-6)</text>

  <!-- Distance Calculation -->
  <rect x="360" y="465" width="120" height="30" class="box-ray"/>
  <text x="420" y="480" class="text-small">hypot(dx, dy)</text>

  <rect x="500" y="465" width="120" height="30" class="box-ray"/>
  <text x="560" y="480" class="text-small">hypot(dx, dy)</text>

  <!-- Compare Distances -->
  <polygon points="450,515 530,515 550,535 530,555 450,555 430,535" class="decision"/>
  <text x="490" y="535" class="text-small">min_distance</text>

  <!-- Set Hit Data -->
  <rect x="430" y="575" width="140" height="35" class="box-ray"/>
  <text x="500" y="593" class="text">Return t_hit data</text>

  <!-- Fisheye Correction -->
  <rect x="430" y="630" width="140" height="35" class="box-ray"/>
  <text x="500" y="648" class="text">dist *= cos(angle_diff)</text>

  <!-- Raycasting Arrows -->
  <line x1="500" y1="185" x2="420" y2="210" class="arrow"/>
  <line x1="500" y1="185" x2="560" y2="210" class="arrow"/>
  <line x1="420" y1="245" x2="420" y2="265" class="arrow"/>
  <line x1="560" y1="245" x2="560" y2="265" class="arrow"/>
  <line x1="420" y1="295" x2="420" y2="315" class="arrow"/>
  <line x1="560" y1="295" x2="560" y2="315" class="arrow"/>
  <line x1="420" y1="345" x2="400" y2="365" class="arrow"/>
  <line x1="560" y1="345" x2="540" y2="365" class="arrow"/>
  <line x1="400" y1="395" x2="420" y2="415" class="arrow"/>
  <line x1="540" y1="395" x2="560" y2="415" class="arrow"/>
  <line x1="420" y1="445" x2="420" y2="465" class="arrow"/>
  <line x1="560" y1="445" x2="560" y2="465" class="arrow"/>
  <line x1="420" y1="495" x2="450" y2="515" class="arrow"/>
  <line x1="560" y1="495" x2="530" y2="515" class="arrow"/>
  <line x1="490" y1="555" x2="500" y2="575" class="arrow"/>
  <line x1="500" y1="610" x2="500" y2="630" class="arrow"/>

  <!-- DDA Loop arrows -->
  <path d="M 360 380 Q 320 380 320 330 Q 320 315 360 330" class="arrow"/>
  <path d="M 500 380 Q 460 380 460 330 Q 460 315 500 330" class="arrow"/>

  <!-- Connection to main flow -->
  <line x1="220" y1="590" x2="430" y2="168" class="arrow-thick"/>

  <!-- Section 3: Advanced Wall Rendering -->
  <rect x="690" y="100" width="300" height="650" class="section-bg"/>
  <text x="840" y="125" class="section-title" text-anchor="middle">Advanced Wall Rendering</text>

  <!-- draw_wall_3d Entry -->
  <rect x="750" y="150" width="140" height="35" class="box-draw"/>
  <text x="820" y="168" class="text">draw_wall_3d(x, hit)</text>

  <!-- Calculate Wall Height -->
  <rect x="750" y="210" width="140" height="35" class="box-draw"/>
  <text x="820" y="228" class="text">Calculate Wall Height</text>

  <!-- Perspective Projection -->
  <rect x="750" y="270" width="140" height="35" class="box-draw"/>
  <text x="820" y="288" class="text">Perspective Projection</text>

  <!-- Draw Range Calculation -->
  <rect x="750" y="330" width="140" height="35" class="box-draw"/>
  <text x="820" y="348" class="text">Draw Range (start/end)</text>

  <!-- Texture Selection -->
  <polygon points="810,385 850,385 870,405 850,425 810,425 790,405" class="decision"/>
  <text x="830" y="405" class="text-small">is_vertical?</text>

  <!-- Texture Types -->
  <rect x="710" y="450" width="80" height="30" class="box-draw"/>
  <text x="750" y="465" class="text-small">N/S Texture</text>

  <rect x="810" y="450" width="80" height="30" class="box-draw"/>
  <text x="850" y="465" class="text-small">E/W Texture</text>

  <!-- calculate_tex_x -->
  <rect x="750" y="505" width="140" height="35" class="box-draw"/>
  <text x="820" y="523" class="text">calculate_tex_x(hit)</text>

  <!-- Column Rendering -->
  <rect x="750" y="565" width="140" height="35" class="box-draw"/>
  <text x="820" y="583" class="text">Render Column Pixels</text>

  <!-- Ceiling -->
  <rect x="710" y="620" width="60" height="25" class="box"/>
  <text x="740" y="633" class="text-small">Ceiling</text>

  <!-- Wall -->
  <rect x="780" y="620" width="60" height="25" class="box-draw"/>
  <text x="810" y="633" class="text-small">Wall</text>

  <!-- Floor -->
  <rect x="850" y="620" width="60" height="25" class="box"/>
  <text x="880" y="633" class="text-small">Floor</text>

  <!-- Rendering Arrows -->
  <line x1="820" y1="185" x2="820" y2="210" class="arrow"/>
  <line x1="820" y1="245" x2="820" y2="270" class="arrow"/>
  <line x1="820" y1="305" x2="820" y2="330" class="arrow"/>
  <line x1="820" y1="365" x2="830" y2="385" class="arrow"/>
  <line x1="830" y1="425" x2="750" y2="450" class="arrow"/>
  <line x1="830" y1="425" x2="850" y2="450" class="arrow"/>
  <line x1="750" y1="480" x2="800" y2="505" class="arrow"/>
  <line x1="850" y1="480" x2="840" y2="505" class="arrow"/>
  <line x1="820" y1="540" x2="820" y2="565" class="arrow"/>
  <line x1="820" y1="600" x2="740" y2="620" class="arrow"/>
  <line x1="820" y1="600" x2="810" y2="620" class="arrow"/>
  <line x1="820" y1="600" x2="880" y2="620" class="arrow"/>

  <!-- Connection from raycasting -->
  <line x1="570" y1="665" x2="750" y2="168" class="arrow-thick"/>

  <!-- Section 4: Advanced Input System -->
  <rect x="1020" y="100" width="300" height="650" class="section-bg"/>
  <text x="1170" y="125" class="section-title" text-anchor="middle">Advanced Input System</text>

  <!-- Input Handler -->
  <rect x="1100" y="150" width="140" height="35" class="box-input"/>
  <text x="1170" y="168" class="text">Input Handler</text>

  <!-- Key Events -->
  <rect x="1100" y="210" width="140" height="35" class="box-input"/>
  <text x="1170" y="228" class="text">Key Press/Release</text>

  <!-- Movement Keys -->
  <rect x="1030" y="270" width="70" height="30" class="box-input"/>
  <text x="1065" y="285" class="text-small">WASD</text>

  <!-- Rotation Keys -->
  <rect x="1110" y="270" width="70" height="30" class="box-input"/>
  <text x="1145" y="285" class="text-small">Arrows</text>

  <!-- Speed Modifier -->
  <rect x="1190" y="270" width="70" height="30" class="box-input"/>
  <text x="1225" y="285" class="text-small">Shift x2</text>

  <!-- Mouse Input -->
  <rect x="1100" y="330" width="140" height="35" class="box-input"/>
  <text x="1170" y="348" class="text">Mouse Movement</text>

  <!-- Movement Processing -->
  <rect x="1050" y="390" width="90" height="30" class="box-input"/>
  <text x="1095" y="405" class="text-small">move()</text>

  <!-- Rotation Processing -->
  <rect x="1160" y="390" width="90" height="30" class="box-input"/>
  <text x="1205" y="405" class="text-small">rotate()</text>

  <!-- Collision Check -->
  <polygon points="1140,450 1200,450 1220,470 1200,490 1140,490 1120,470" class="decision"/>
  <text x="1170" y="470" class="text-small">!is_wall?</text>

  <!-- Update Position -->
  <rect x="1050" y="520" width="90" height="30" class="box-input"/>
  <text x="1095" y="535" class="text-small">Update X</text>

  <rect x="1160" y="520" width="90" height="30" class="box-input"/>
  <text x="1205" y="535" class="text-small">Update Y</text>

  <!-- Independent Collision -->
  <rect x="1100" y="575" width="140" height="35" class="box-input"/>
  <text x="1170" y="593" class="text">Independent X/Y Check</text>

  <!-- Mouse Centering -->
  <rect x="1100" y="635" width="140" height="35" class="box-input"/>
  <text x="1170" y="653" class="text">Mouse Centering</text>

  <!-- Input System Arrows -->
  <line x1="1170" y1="185" x2="1170" y2="210" class="arrow"/>
  <line x1="1170" y1="245" x2="1065" y2="270" class="arrow"/>
  <line x1="1170" y1="245" x2="1145" y2="270" class="arrow"/>
  <line x1="1170" y1="245" x2="1225" y2="270" class="arrow"/>
  <line x1="1170" y1="365" x2="1170" y2="330" class="arrow"/>
  <line x1="1065" y1="300" x2="1095" y2="390" class="arrow"/>
  <line x1="1145" y1="300" x2="1205" y2="390" class="arrow"/>
  <line x1="1170" y1="365" x2="1205" y2="390" class="arrow"/>
  <line x1="1095" y1="420" x2="1150" y2="450" class="arrow"/>
  <line x1="1205" y1="420" x2="1190" y2="450" class="arrow"/>
  <line x1="1170" y1="490" x2="1095" y2="520" class="arrow"/>
  <line x1="1170" y1="490" x2="1205" y2="520" class="arrow"/>
  <line x1="1095" y1="550" x2="1150" y2="575" class="arrow"/>
  <line x1="1205" y1="550" x2="1190" y2="575" class="arrow"/>
  <line x1="1170" y1="610" x2="1170" y2="635" class="arrow"/>

  <!-- Connection to main flow -->
  <line x1="220" y1="410" x2="1100" y2="168" class="arrow-thick"/>

  <!-- Section 5: Challenges & Solutions -->
  <rect x="1350" y="100" width="420" height="650" class="section-bg"/>
  <text x="1560" y="125" class="section-title" text-anchor="middle">Major Challenges &amp; Solutions</text>

  <!-- Challenge 1: Precision -->
  <rect x="1380" y="160" width="180" height="70" class="box-challenge"/>
  <text x="1470" y="180" class="text-small">1. Precision &amp; Edge Cases</text>
  <text x="1470" y="198" class="text-tiny">Problem: Float boundary errors</text>
  <text x="1470" y="212" class="text-tiny">Solution: EPS offset (1e-6)</text>
  <text x="1470" y="225" class="text-tiny">+ Boundary condition checks</text>

  <!-- Challenge 2: DDA -->
  <rect x="1580" y="160" width="180" height="70" class="box-challenge"/>
  <text x="1670" y="180" class="text-small">2. DDA Algorithm</text>
  <text x="1670" y="198" class="text-tiny">Problem: Complex grid traversal</text>
  <text x="1670" y="212" class="text-tiny">Solution: Modular functions</text>
  <text x="1670" y="225" class="text-tiny">get_horizontal/vertical_intercept</text>

  <!-- Challenge 3: Textures -->
  <rect x="1380" y="250" width="180" height="70" class="box-challenge"/>
  <text x="1470" y="270" class="text-small">3. Texture Mapping</text>
  <text x="1470" y="288" class="text-tiny">Problem: Texture coordinate calc</text>
  <text x="1470" y="302" class="text-tiny">Solution: calculate_tex_x()</text>
  <text x="1470" y="315" class="text-tiny">Prevents texture flipping</text>

  <!-- Challenge 4: Fisheye -->
  <rect x="1580" y="250" width="180" height="70" class="box-challenge"/>
  <text x="1670" y="270" class="text-small">4. Fisheye Correction</text>
  <text x="1670" y="288" class="text-tiny">Problem: Curved wall distortion</text>
  <text x="1670" y="302" class="text-tiny">Solution: dist *= cos(angle)</text>
  <text x="1670" y="315" class="text-tiny">Proper perspective projection</text>

  <!-- Challenge 5: Performance -->
  <rect x="1380" y="340" width="180" height="70" class="box-challenge"/>
  <text x="1470" y="360" class="text-small">5. Performance</text>
  <text x="1470" y="378" class="text-tiny">Problem: 1200 rays per frame</text>
  <text x="1470" y="392" class="text-tiny">Solution: Single image buffer</text>
  <text x="1470" y="405" class="text-tiny">memset + visibility culling</text>

  <!-- Challenge 6: Input -->
  <rect x="1580" y="340" width="180" height="70" class="box-challenge"/>
  <text x="1670" y="360" class="text-small">6. Smooth Movement</text>
  <text x="1670" y="378" class="text-tiny">Problem: Clunky controls</text>
  <text x="1670" y="392" class="text-tiny">Solution: Independent X/Y</text>
  <text x="1670" y="405" class="text-tiny">Mouse centering + speed mult</text>

  <!-- Challenge 7: Memory -->
  <rect x="1380" y="430" width="180" height="70" class="box-challenge"/>
  <text x="1470" y="450" class="text-small">7. Memory Management</text>
  <text x="1470" y="468" class="text-tiny">Problem: MLX resource leaks</text>
  <text x="1470" y="482" class="text-tiny">Solution: Proper cleanup</text>
  <text x="1470" y="495" class="text-tiny">destroy_image/window calls</text>

  <!-- Challenge 8: Architecture -->
  <rect x="1580" y="430" width="180" height="70" class="box-challenge"/>
  <text x="1670" y="450" class="text-small">8. Code Organization</text>
  <text x="1670" y="468" class="text-tiny">Problem: Monolithic structure</text>
  <text x="1670" y="482" class="text-tiny">Solution: Modular architecture</text>
  <text x="1670" y="495" class="text-tiny">core/game/graphics folders</text>

  <!-- Technical Stats -->
  <rect x="1380" y="530" width="380" height="100" class="box-info"/>
  <text x="1570" y="550" class="section-title" text-anchor="middle">Technical Achievements</text>
  <text x="1400" y="575" class="text-info">• Real-time 3D rendering at 60+ FPS</text>
  <text x="1400" y="590" class="text-info">• 1200 rays per frame (1 per column)</text>
  <text x="1400" y="605" class="text-info">• Advanced DDA with EPS precision</text>
  <text x="1400" y="620" class="text-info">• Modular architecture for maintainability</text>

  <text x="1570" y="655" class="section-title" text-anchor="middle">Performance Metrics</text>
  <text x="1400" y="680" class="text-info">• Screen Resolution: 1200x800</text>
  <text x="1400" y="695" class="text-info">• Texture Resolution: 64x64</text>
  <text x="1400" y="710" class="text-info">• Memory Usage: &lt; 50MB</text>
  <text x="1400" y="725" class="text-info">• Render Time: &lt; 16ms per frame</text>

  <!-- Section 6: Technical Architecture -->
  <rect x="30" y="780" width="1740" height="300" class="section-bg"/>
  <text x="900" y="810" class="section-title" text-anchor="middle">Technical Architecture &amp; Constants</text>

  <!-- Constants -->
  <rect x="60" y="840" width="280" height="180" class="box-info"/>
  <text x="200" y="865" class="subtitle" text-anchor="middle">Core Constants</text>
  <text x="80" y="890" class="text-dark">TILE_SIZE = 64</text>
  <text x="80" y="910" class="text-dark">SCREEN_WIDTH = 1200</text>
  <text x="80" y="930" class="text-dark">SCREEN_HEIGHT = 800</text>
  <text x="80" y="950" class="text-dark">FOV = 1.0 radians</text>
  <text x="80" y="970" class="text-dark">MOVE_SPEED = 2.0</text>
  <text x="80" y="990" class="text-dark">ROT_SPEED = 0.02</text>
  <text x="80" y="1010" class="text-dark">EPS = 1e-6</text>

  <!-- File Structure -->
  <rect x="360" y="840" width="320" height="180" class="box-info"/>
  <text x="520" y="865" class="subtitle" text-anchor="middle">Modular File Structure</text>
  <text x="380" y="890" class="text-dark">src/raycasting/core/</text>
  <text x="400" y="910" class="text-dark">├── raycasting.c (DDA algorithm)</text>
  <text x="400" y="930" class="text-dark">├── init.c (initialization)</text>
  <text x="400" y="950" class="text-dark">└── utils.c (helper functions)</text>
  <text x="380" y="975" class="text-dark">src/raycasting/game/</text>
  <text x="400" y="995" class="text-dark">├── input.c ├── movement.c ├── player.c</text>

  <!-- Core Functions -->
  <rect x="700" y="840" width="320" height="180" class="box-info"/>
  <text x="860" y="865" class="subtitle" text-anchor="middle">Core Functions</text>
  <text x="720" y="890" class="text-dark">get_distance() → Main DDA</text>
  <text x="720" y="910" class="text-dark">get_horizontal_intercept() → H-DDA</text>
  <text x="720" y="930" class="text-dark">get_vertical_intercept() → V-DDA</text>
  <text x="720" y="950" class="text-dark">draw_wall_3d() → Column render</text>
  <text x="720" y="970" class="text-dark">calculate_tex_x() → Texture coords</text>
  <text x="720" y="990" class="text-dark">draw_minimap() → 2D overview</text>
  <text x="720" y="1010" class="text-dark">update_loop() → Main game cycle</text>

  <!-- Performance Features -->
  <rect x="1040" y="840" width="320" height="180" class="box-info"/>
  <text x="1200" y="865" class="subtitle" text-anchor="middle">Performance Features</text>
  <text x="1060" y="890" class="text-dark">• Single image buffer strategy</text>
  <text x="1060" y="910" class="text-dark">• memset() for fast clearing</text>
  <text x="1060" y="930" class="text-dark">• Visibility culling for minimap</text>
  <text x="1060" y="950" class="text-dark">• Fisheye correction</text>
  <text x="1060" y="970" class="text-dark">• EPS precision handling</text>
  <text x="1060" y="990" class="text-dark">• Real-time texture sampling</text>
  <text x="1060" y="1010" class="text-dark">• 60+ FPS rendering</text>

  <!-- Quality Metrics -->
  <rect x="1380" y="840" width="320" height="180" class="box-info"/>
  <text x="1540" y="865" class="subtitle" text-anchor="middle">Quality Metrics</text>
  <text x="1400" y="890" class="text-dark">✓ Memory safe (no leaks)</text>
  <text x="1400" y="910" class="text-dark">✓ Norm compliant code</text>
  <text x="1400" y="930" class="text-dark">✓ Modular architecture</text>
  <text x="1400" y="950" class="text-dark">✓ Error handling</text>
  <text x="1400" y="970" class="text-dark">✓ Cross-platform (Linux)</text>
  <text x="1400" y="990" class="text-dark">✓ Optimized algorithms</text>
  <text x="1400" y="1010" class="text-dark">✓ Clean abstractions</text>

  <!-- Legend -->
  <rect x="30" y="1120" width="1740" height="100" class="section-bg"/>
  <text x="900" y="1145" class="section-title" text-anchor="middle">Component Legend</text>

  <rect x="60" y="1165" width="30" height="20" class="box-init"/>
  <text x="100" y="1178" class="text-dark">Initialization</text>

  <rect x="240" y="1165" width="30" height="20" class="box-input"/>
  <text x="280" y="1178" class="text-dark">Input Handling</text>

  <rect x="420" y="1165" width="30" height="20" class="box-ray"/>
  <text x="460" y="1178" class="text-dark">Raycasting Core</text>

  <rect x="600" y="1165" width="30" height="20" class="box-draw"/>
  <text x="640" y="1178" class="text-dark">Rendering</text>

  <rect x="780" y="1165" width="30" height="20" class="box-challenge"/>
  <text x="820" y="1178" class="text-dark">Challenges</text>

  <rect x="960" y="1165" width="30" height="20" class="box-info"/>
  <text x="1000" y="1178" class="text-dark">Information</text>

  <polygon points="1140,1165 1160,1165 1170,1175 1160,1185 1140,1185 1130,1175" class="decision"/>
  <text x="1180" y="1178" class="text-dark">Decision Points</text>

  <line x1="1320" y1="1175" x2="1360" y2="1175" class="arrow"/>
  <text x="1370" y="1178" class="text-dark">Process Flow</text>

  <line x1="1500" y1="1175" x2="1540" y2="1175" class="arrow-thick"/>
  <text x="1550" y="1178" class="text-dark">Main Connections</text>

  <!-- Footer -->
  <text x="900" y="1260" class="title" text-anchor="middle" style="font-size: 20px;">
    Cub3D Advanced Raycasting Engine - Complete Technical Overview
  </text>
  <text x="900" y="1290" class="text-dark" text-anchor="middle" style="font-size: 12px;">
    Featuring modular DDA implementation, EPS precision handling, advanced texture mapping,
  </text>
  <text x="900" y="1310" class="text-dark" text-anchor="middle" style="font-size: 12px;">
    performance optimizations, and comprehensive challenge solutions
  </text>

</svg>
